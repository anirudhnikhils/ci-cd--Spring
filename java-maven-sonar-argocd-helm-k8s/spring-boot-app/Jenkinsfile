pipeline {
    agent any

    tools {
        maven 'Maven 3.x' // The name you provided in the Global Tool Configuration
    }

    environment {
        DOCKER_IMAGE = "anirudhnikhil/spring:${BUILD_NUMBER}"  // Docker image name with build number
        REGISTRY_CREDENTIALS = credentials('docker_cred')     // Docker credentials ID
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Checkout started'
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], 
                    userRemoteConfigs: [[credentialsId: 'jenkins-git', url: 'https://github.com/anirudhnikhils/ci-cd--Spring.git']]])
                echo 'Checkout completed'
            }
        }

        stage('Maven Build') {
            steps {
                echo 'Maven build started'
                bat 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
                echo 'Maven build completed'
            }
        }

        stage('Maven Test') {
            steps {
                echo 'Maven test started'
                bat 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn test'
                echo 'Maven test completed'
            }
        }

        stage('Docker Build and Push') {
            steps {
                script {
                    echo "Building Docker image with tag: ${DOCKER_IMAGE}"
                    sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
                    
                    echo 'Docker push started'
                    docker.withRegistry('https://index.docker.io/v1/', 'docker_cred') {
                        sh 'docker push ${DOCKER_IMAGE}'
                    }
                    echo 'Docker push completed'
                }
            }
        }
    }
}
