pipeline {
    agent any
    tools {
        maven 'Maven 3.x' // The name you provided in the Global Tool Configuration
    }
    
    environment {
        docker_image = "anirudhnikhil/spring:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker_cred')
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Build started'
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'jenkins-git', url: 'https://github.com/anirudhnikhils/ci-cd--Spring.git']])
                echo 'Build completed'
            }
        }
        
        stage('Maven Build') {
            steps {
                echo 'Maven build started'
                bat 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
                echo 'Maven build completed'
            }
        }
        
        stage('Maven Test') {
            steps {
                echo 'Maven test started'
                bat 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn test'
                echo 'Maven test completed'
            }
        }
        
        stage('Docker Build and Push') {
            steps {
                script {
                    echo "Building Docker image with tag: ${docker_image}"
                    bat 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${docker_image} .'
                    dockerImage = docker.image("${docker_image}")
                    docker.withRegistry('https://index.docker.io/v1/', "docker_cred") {
                        dockerImage.push()
                        bat 'docker tag ${DOCKER_IMAGE} anirudhnikhil/spring:latest'
                        bat 'docker push anirudhnikhil/spring:latest'
                    }
                }
            }
        }
        
        stage('Helm Deploy') {
            steps {
                script {
                    echo 'Helm deploy started'
                    // Ensure Helm is installed and available in the PATH
                    bat 'helm version'
                    // Update Helm repo
                    bat 'helm repo update'
                    // Install or upgrade the Helm chart
                    bat 'helm upgrade --install spring-boot-app ./charts/spring-boot-app --namespace default'
                    echo 'Helm deploy completed'
                }
            }
        }
    }
    
    post {
        success {
            echo 'Pipeline succeeded'
        }
        failure {
            echo 'Pipeline failed'
        }
    }
}
